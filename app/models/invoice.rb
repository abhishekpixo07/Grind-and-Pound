class Invoice < ApplicationRecord
  belongs_to :user
  belongs_to :order
  has_many :invoice_items, dependent: :destroy
  accepts_nested_attributes_for :invoice_items, allow_destroy: true
 
  def generate_pdf
     # Create a new Prawn document in memory
     pdf = Prawn::Document.new
 
     # Add a header with a company logo at the top middle
     pdf.bounding_box([pdf.bounds.width / 2 - 50, pdf.bounds.top], width: 100, height: 50) do
       pdf.image Rails.root.join('app', 'assets', 'images', 'PL-Teal.png'), width: 100
     end
 
     pdf.move_down 25
 
     pdf.font_size 18
     pdf.text "Invoice ##{invoice_number}", align: :center
     pdf.move_down 20
 
     pdf.font_size 12
     pdf.text "Date: #{date.strftime('%B %d, %Y')}", align: :left
     pdf.text "Customer: #{user.title} #{user.first_name} #{user.last_name}", align: :left
     pdf.move_down 10
 
     headers = ['Item', 'Quantity', 'Price']
     items = invoice_items.map { |item| [item.name, item.quantity, "#{item.price}"] }
 
     pdf.table [headers] + items, header: true, width: pdf.bounds.width do
       row(0).font_style = :bold
       cells.padding = 5
       cells.borders = [:top, :bottom, :left, :right]
       columns(0).width = 300
     end
 
     discount_amount = order.discount_amount
     shipping_fee = order.shipping_fee
     tax_amount = 0
     total_payable = order.total_amount
 
     pdf.move_down 20
     pdf.text "Delivery Date: #{order.delivery_date}", align: :left
     pdf.text "Total items: #{invoice_items.count}", align: :right
     pdf.text "Discount Amount: #{discount_amount}", align: :right
     pdf.text "Shipping fee: #{shipping_fee}", align: :right
     pdf.text "Tax: #{tax_amount}", align: :right
     pdf.text "Total Payable Amount: #{total_payable}", align: :right
 
     # Add footer
     pdf.repeat :all do
       pdf.font_size 10
       pdf.fill_color "333333" # Darker color (hex)
       pdf.text "Generated by Ground & Pound", align: :center, valign: :bottom
       pdf.fill_color "000000" # Reset color to black
       pdf.number_pages "<page> / <total>", at: [pdf.bounds.right - 50, 0], width: 50, align: :right
     end
 
     # Return the binary data of the PDF
     pdf.render
  end
 end
 